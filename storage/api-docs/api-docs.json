{
    "openapi": "3.0.0",
    "info": {
        "title": "My API Docs",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/admins/addMarket": {
            "post": {
                "tags": [
                    "Admins"
                ],
                "summary": "add new market",
                "operationId": "8ab74f7795bde9400b4d6bff33107391",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "market_name",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Harry Potter"
                                    },
                                    "market_name": {
                                        "type": "string",
                                        "example": "be order"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully create market"
                                        },
                                        "market": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/admins/addAdmin": {
            "post": {
                "tags": [
                    "Admins"
                ],
                "summary": "add new admin",
                "operationId": "7804f8a886d79f4ad76c33ef0347dd90",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin2"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully create admin"
                                        },
                                        "market": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/admins/editMarket/{manager}": {
            "put": {
                "tags": [
                    "Admins"
                ],
                "summary": "edit on market",
                "operationId": "a162ba92c828421c846399f788a2b0fd",
                "parameters": [
                    {
                        "name": "manager",
                        "in": "path",
                        "description": "manager id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "new_market_name"
                                ],
                                "properties": {
                                    "new_market_name": {
                                        "type": "string",
                                        "example": "bee order"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful edited",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully edit market"
                                        },
                                        "market": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/admins/deleteMarket/{manager}": {
            "delete": {
                "tags": [
                    "Admins"
                ],
                "summary": "delete market and his owner",
                "operationId": "6406b77b035e3d7d185d31fa9cff5602",
                "parameters": [
                    {
                        "name": "manager",
                        "in": "path",
                        "description": "manager id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully delete market"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/admins/getMarkets": {
            "get": {
                "tags": [
                    "Admins"
                ],
                "summary": "get all markets",
                "operationId": "c1c34979f8062140ccffda3800b486b1",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "number of records per page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful get all markets",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully get all markets"
                                        },
                                        "markets": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/admins/getProducts/{market}": {
            "get": {
                "tags": [
                    "Admins"
                ],
                "summary": "get all products for market",
                "operationId": "2b9c78bf6f540fc968da16aea24e19c3",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "number of records per page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "market",
                        "in": "path",
                        "description": "market id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful get all products for market",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully get all products for market"
                                        },
                                        "products": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/admins/getTopProducts": {
            "get": {
                "tags": [
                    "Admins"
                ],
                "summary": "get products order by number of purchases",
                "operationId": "7f48626e032f05d4d114137107535b24",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "number of records per page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful get products order by number of purchases",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully get products order by number of purchases"
                                        },
                                        "products": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/admins/getTopProducts/{market}": {
            "get": {
                "tags": [
                    "Admins"
                ],
                "summary": "get products order by number of purchases for market",
                "operationId": "bc65e94ce903ef24c21c79f4c39ad353",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "number of records per page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "market",
                        "in": "path",
                        "description": "market id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful get products order by number of purchases for market",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully get products order by number of purchases for market"
                                        },
                                        "products": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/categories/getAll": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "get all categories",
                "operationId": "5a8efe3efc0d2057f010a56341f37f86",
                "responses": {
                    "200": {
                        "description": "succesful get all categories",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/locations/addLocation": {
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "add new location",
                "operationId": "7acbcf427d5bc898f7de567ffc816d91",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "city",
                                    "address",
                                    "building_number",
                                    "floor_number",
                                    "notes"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": " potter"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "damascus Al-Midan"
                                    },
                                    "street": {
                                        "type": "string",
                                        "example": "long one"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "in front of the red building."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "location added seccessfully"
                                        },
                                        "location": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/locations/getLocations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "get all locations for user",
                "operationId": "aa7abb47c0ffb49a86a1b2007fea5896",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "number of records per page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful get locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "locations get seccessfully"
                                        },
                                        "locations": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/locations/deleteLocation/{location_id}": {
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "delete location for user",
                "operationId": "1376a1323958cff667929111fc73740b",
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "id of location you want to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful delete location",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "locations delete seccessfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/managers/login": {
            "post": {
                "tags": [
                    "Managers"
                ],
                "summary": "login manager",
                "operationId": "745f2d02f6ad00bc8350231c433c062a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "manager has been login successfuly"
                                        },
                                        "Bearer Token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/managers/logout": {
            "post": {
                "tags": [
                    "Managers"
                ],
                "summary": "logout manager",
                "operationId": "7d72fc878295f4146454fce335a43f8a",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "manager has been logout successfuly"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/managers/refreshToken": {
            "put": {
                "tags": [
                    "Managers"
                ],
                "summary": "refresh token",
                "operationId": "15f57babc4c12db926d769bc926ed305",
                "responses": {
                    "200": {
                        "description": "return the new token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "new token set"
                                        },
                                        "Bearer Token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/managers/resetPassword": {
            "put": {
                "tags": [
                    "Managers"
                ],
                "summary": "reset password",
                "operationId": "6f2ec86e1759f659cb640822fd6153dc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully set new password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "new password set"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/sellers/addProduct": {
            "post": {
                "tags": [
                    "Sellers"
                ],
                "summary": "add new product",
                "operationId": "b9c99a8200f21acc65f5a7fa53c6d5b4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "category_id",
                                    "quantity",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Choko Cake"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 5000
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "for birthdays"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully create product"
                                        },
                                        "product": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/sellers/uploadImage/{product}": {
            "post": {
                "tags": [
                    "Sellers"
                ],
                "summary": "Upload product image",
                "operationId": "c8ecf276021a8638d39aaf35fb73039e",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful uploaded an image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "uploaded product image successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/sellers/edit/{product}": {
            "put": {
                "tags": [
                    "Sellers"
                ],
                "summary": "edit product",
                "operationId": "a04e151acc71b1e2079cf07dbeee31ae",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "category_id",
                                    "quantity",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Choko Cake"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 10000
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "for birthdays"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful edited",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully edit product"
                                        },
                                        "product": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/sellers/delete/{product}": {
            "delete": {
                "tags": [
                    "Sellers"
                ],
                "summary": "delete product",
                "operationId": "7996fd0519f1d32029f34a78e65b229b",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully delete product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/sellers/deleteImage/{product}": {
            "delete": {
                "tags": [
                    "Sellers"
                ],
                "summary": "delete product image",
                "operationId": "ba7e9719141c56351fabe7a8104a0fa7",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete the product image",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/sellers/getProducts": {
            "get": {
                "tags": [
                    "Sellers"
                ],
                "summary": "get all products for market",
                "operationId": "eb001b786028f2278ff5f5b778c96f3e",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "number of records per page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful get all products for market",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully get all products for market"
                                        },
                                        "products": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/sellers/getTopProducts": {
            "get": {
                "tags": [
                    "Sellers"
                ],
                "summary": "get products order by number of purchases for market",
                "operationId": "a8ca1632a0309f774e1fa9a3a7838447",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "number of records per page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number of page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful get products order by number of purchases for market",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "successfully get products order by number of purchases for market"
                                        },
                                        "products": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/sellers/getImage/{product}": {
            "get": {
                "tags": [
                    "Sellers"
                ],
                "summary": "image for product",
                "operationId": "5ebe36ba3d7ba91458a6d726c0073a4f",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return the image of product",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/statuses/getAll": {
            "get": {
                "tags": [
                    "Statuses"
                ],
                "summary": "get all statuses",
                "operationId": "1a590f49e15a42a0462020623eb2a2f0",
                "responses": {
                    "200": {
                        "description": "succesful get all statuses",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "register users",
                "operationId": "75ac4d6a6e8c8bdc865ea7806514679b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "number",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "Harry"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "potter"
                                    },
                                    "number": {
                                        "type": "string",
                                        "example": "0912345678"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful register and verification code send to email to verify user with id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code sent"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/users/verifyNumber": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "verify users",
                "operationId": "e213881f3a5758ae59d6965201fe29b9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "verify_code",
                                    "id"
                                ],
                                "properties": {
                                    "verify_code": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful verify",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user has been verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "login user",
                "operationId": "2bed00028ae8e20c4e21a4f7b8c6c281",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "number",
                                    "password"
                                ],
                                "properties": {
                                    "number": {
                                        "type": "string",
                                        "example": "0912345678"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user has been login successfuly"
                                        },
                                        "Bearer Token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "logout user",
                "operationId": "e04092d0d4e79aa59108004b0e614d75",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user has been logout successfuly"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/forgetPassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "send check code to user for forget password",
                "operationId": "3f464d87b22f7850714525ccfd5629bb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "number",
                                    "email"
                                ],
                                "properties": {
                                    "number": {
                                        "type": "string",
                                        "example": "0912345678"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "test@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "verification code send to user with id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code sent"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/users/verifyNewPassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "verify user to set new password",
                "operationId": "1b968624266059a87efa5b2051c6756e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "verify_code",
                                    "id"
                                ],
                                "properties": {
                                    "verify_code": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful verify",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user has been verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/users/uploadImage": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Upload user image",
                "operationId": "c4d33abb3d313290279e0891c57462cd",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful uploaded an image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user has uploaded his image successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/setPassword": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "set new password",
                "operationId": "cd36662d3ba59dc825526afa280d35eb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully set of password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "new password set"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/users/resetPassword": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "reset password",
                "operationId": "42de47313002e71652fb55c0f1616d5e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully set new password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "new password set"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/editUser": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "edit users",
                "operationId": "cd188f8fc4d42354d95133ca32448619",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "Ron"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Weasly"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully edit the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "updated done"
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/refreshToken": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "refresh token",
                "operationId": "f2efd740a4a74e84bbba4322c944eed2",
                "responses": {
                    "200": {
                        "description": "return the new token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "new token set"
                                        },
                                        "Bearer Token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/currentUser": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "current user information",
                "operationId": "b4ef93685e1ef230f74f8b453c55cab5",
                "responses": {
                    "200": {
                        "description": "return the user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/getImage": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "image of current user",
                "operationId": "2ff379f4108f962d6781f3a05dea7bfb",
                "responses": {
                    "200": {
                        "description": "return the image of user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/deleteImage": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "delete user image",
                "operationId": "c6adc2561bff7fda010d4ba7fe80f394",
                "responses": {
                    "200": {
                        "description": "delete the user image",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Admins",
            "description": "Admins"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Locations",
            "description": "Locations"
        },
        {
            "name": "Managers",
            "description": "Managers"
        },
        {
            "name": "Sellers",
            "description": "Sellers"
        },
        {
            "name": "Statuses",
            "description": "Statuses"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "scheme": "bearer",
                "in": "header",
                "name": "Authorization",
                "description": "Enter your Bearer token in the format `YOUR_TOKEN`. For example: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...`"
            }
        }
    }
}